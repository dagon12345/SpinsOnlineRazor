@page
@model SpinsOnlineRazor.Pages.Beneficiaries.IndexModel

@{
    ViewData["Title"] = "Beneficiaries";



}
<style>
    table {
    @*display:block;overflow-x:auto;white-space:nowrap;*@
    }

    #fontsize {
        font-size: 12px;
    }
</style>

<h1>Beneficiaries</h1>



@*The preceding code uses the <form> tag helper to add the search text box and button.
By default, the <form> tag helper submits form data with a POST.
With POST, the parameters are passed in the HTTP message body and not in the URL.
When HTTP GET is used, the form data is passed in the URL as query strings.
Passing the data with query strings enables users to bookmark the URL.
The W3C guidelines recommend that GET should be used when the action doesn't result in an update.*@

<body>


    <div class="Row" style="display: flex; justify-content: space-between;">

        <div class="col-sm-6 ">
            <p>
                <a class="btn btn-success" asp-page="Create" style="padding: 5px; margin-left: 2%;">
                    Add <i class="bi bi-plus-circle-fill"></i>
                </a>
            </p>
        </div>


        <div class="col-sm-6 ">
            <form class="d-flex" asp-page="./Index" method="get">

                <div class="input-group mb-3">


                    <select class="form-control me-sm-2" name="searchMunicipality"
                        asp-items="@Model.MunicipalityOptions" value="@Model.MunicipalityFilter">
                        <option value="">All Municipalities</option>
                    </select>

                    @* <select name="MunicipalityID" asp-items="Model.Municipalities"
                    value="@Model.MunicipalityFilter"></select> *@

                    <select class="form-control me-sm-2" name="searchStatus" asp-items="@Model.StatusOptions"
                        value="@Model.StatusFilter">
                        <option value="">All Status</option>
                    </select>

                    @* <a class="btn btn-secondary my-2 my-sm-0" type="submit">
                    <i class="bi bi-search"></i>
                    </a> *@

                    <input type="submit" value="Search" class="btn btn-primary" />

                    <a class="btn btn-secondary" style="margin-right: 5" asp-page="./Index">
                        <i class="bi bi-arrow-clockwise"></i>
                    </a>


                </div>
            </form>
        </div>
    </div>



    <ejs-grid id="Grid" dataSource="@Model.BeneficiaryViewModel" detailTemplate="#detailtemplate" allowPaging="true"
        created="created" frozenColumns="5" allowFiltering="true" height="500"
        toolbar="@(new List<string>() { "Search"})" actionBegin="actionBegin" actionComplete="actionComplete">
        <e-grid-searchSettings fields="@(new string[] { "LastName","FirstName","MiddleName"})" operator="contains"
            ignoreCase="true"></e-grid-searchSettings>
        <e-grid-pagesettings pageSize="20"></e-grid-pagesettings>
        <e-grid-filterSettings type="Excel" enableInfiniteScrolling="true"
            loadingIndicator="Spinner"></e-grid-filterSettings>

        <e-grid-columns>
            <e-grid-column headerText="" template="#template" width="25"></e-grid-column>
            <e-grid-column headerText="" template="#templateedit" width="25" textAlign="Center"></e-grid-column>
            @* <e-grid-column headerText="" template="#templateview" width="60" textAlign="Center"></e-grid-column> *@
            <e-grid-column headerText="" template="#templatedelete" width="25" textAlign="Center"></e-grid-column>

            <e-grid-column field="BeneficiaryID" headerText="ID" visible="false" width="50"></e-grid-column>
            <e-grid-column field="Status" headerText="Status" width="120" textAlign="Center"></e-grid-column>
            <e-grid-column field="Assessment" headerText="Assessment" width="180"></e-grid-column>
            <e-grid-column field="LastName" headerText="Last Name" width="120"></e-grid-column>
            <e-grid-column field="FirstName" headerText="First Name" width="150"></e-grid-column>
            <e-grid-column field="MiddleName" headerText="Middle Name" width="150"></e-grid-column>
            <e-grid-column field="ExtName" headerText="Ext Name" width="120"></e-grid-column>
            <e-grid-column field="Age" headerText="Age" width="120" textAlign="Center"></e-grid-column>

            <e-grid-column field="RegionName" headerText="Region" width="150"></e-grid-column>
            <e-grid-column field="ProvinceName" headerText="Province" width="150"></e-grid-column>
            <e-grid-column field="MunicipalityName" headerText="Municipality" width="150"></e-grid-column>
            <e-grid-column field="BarangayName" headerText="Barangay" width="150"></e-grid-column>


            <e-grid-column field="Referencecode" headerText="Validation #" width="150"></e-grid-column>
            <e-grid-column field="SpinsBatch" headerText="Spins Batch" width="140"></e-grid-column>
            <e-grid-column field="Indigenous" headerText="Indigenous" displayAsCheckBox="true"
                width="140"></e-grid-column>
            <e-grid-column field="Pantawid" headerText="Pantawid" displayAsCheckBox="true" width="140"></e-grid-column>
            <e-grid-column field="DateEntered" headerText="Date Entered" format="yMd" width="140"></e-grid-column>


        </e-grid-columns>
    </ejs-grid>
</body>

<script>
    var values;
    var key = '';
    var refresh = false;
    var removeQuery = false;
    var valueAssign = false;

    function actionBegin(args) {
        if (args.requestType == 'searching') {
            const keys = args.searchString.split(',');
            var flag = true;
            var predicate;
            if (keys.length > 1) {
                if (this.searchSettings.key !== '') {
                    values = args.searchString;
                    keys.forEach((key) => {
                        this.getColumns().forEach((col) => {
                            if (flag) {
                                predicate = new ej.data.Predicate(
                                    col.field,
                                    'contains',
                                    key,
                                    true
                                );

                                flag = false;
                            } else {
                                var predic = new ej.data.Predicate(
                                    col.field,
                                    'contains',
                                    key,
                                    true
                                );

                                predicate = predicate.or(predic);
                            }
                        });
                    });
                    this.query = new ej.data.Query().where(predicate);
                    this.searchSettings.key = '';
                    refresh = true;
                    valueAssign = true;
                    removeQuery = true;
                    this.refresh();
                }
            }
        }
    }
    function actionComplete(args) {

        if (args.requestType === 'refresh' && valueAssign) {
            document.getElementById(this.element.id + '_searchbar').value = values;
            valueAssign = false;
        } else if (
            document.getElementById(this.element.id + '_searchbar').value === '' &&
            args.requestType === 'refresh' &&
            removeQuery
        ) {
            this.query = new ej.data.Query();
            removeQuery = false;
            this.refresh();
        }
    }
</script>

<script>
    function created() {
        var grid = document.getElementById("Grid").ej2_instances[0];
        document.getElementById(grid.element.id + "_searchbar").addEventListener('keyup', () => {
            grid.search(event.target.value)
        });
    }
</script>


@*Design for the detailtable in datagrid*@
<style type="text/css" class="cssStyles">
    .detailtable td {
        font-size: 13px;
        padding: 4px;
        max-width: 0;
        overflow: hidden;
        text-overflow: ellipsis;
        white-space: nowrap;
        font-weight: normal;
    }
</style>

<script type="text/x-template" id="detailtemplate">
    <table class="detailtable" width="100%">
        <colgroup>
            <col width="20%" />
            <col width="20%" />
            <col width="20%" />
            <col width="40%" />
        </colgroup>
        <tbody>
            <tr>
                 <td>
                    <span style="font-weight: 500;">Birth Date: </span> ${BirthDate.toLocaleDateString()}
                </td>
                 <td>
                    <span style="font-weight: 500;">Address/Purok: </span> ${Address}
                </td>
                <td>
                    <span style="font-weight: 500;">Sex: </span> ${Sex}
                </td>

            </tr>
             <tr>

                <td>
                    <span style="font-weight: 500;">ID Type: </span> ${IdentificationType}
                </td>
                 <td>
                    <span style="font-weight: 500;">Contact Number: </span> ${ContactNumber}
                </td>
                  <td>
                    <span style="font-weight: 500;">Marital Status: </span> ${MaritalStatus}
                </td>

            </tr>
             <tr>

                <td>
                    <span style="font-weight: 500;">ID Number: </span> ${IdentificationNo}
                </td>

                 <td>
                    <span style="font-weight: 500;">Health Status: </span> ${HealthStatus}
                </td>
            </tr>
              <tr>

                <td>
                    <span style="font-weight: 500;">Date Issued: </span> ${IdentificationDateIssued.toLocaleDateString()}
                </td>
                <td>
                    <span style="font-weight: 500;">Remarks: </span> ${Remarks}
                </td>
            </tr>

             </tr>
        </tbody>
    </table>
</script>


@*This is for validation form*@
<script id="template" type="text/x-template">
    <a href="#" onclick="navigateToValidationForm(this) " ><i class="bi bi-folder-plus"></i></a>
</script>

<script>
    function navigateToValidationForm(e) {
        var grid = document.getElementsByClassName('e-grid')[0].ej2_instances[0];
        var rowObj = grid.getRowObjectFromUID(ej.base.closest(e, '.e-row').getAttribute('data-uid'));
        var beneficiaryID = rowObj.data['BeneficiaryID']; // Get the BeneficiaryID from the grid row
        window.location.href = '/Beneficiaries/AddValidationForm?id=' + beneficiaryID; // Navigate to AddValidationForm page with beneficiaryID as query parameter
    }
</script>

@*This is for edit form*@
<script id="templateedit" type="text/x-template">
    <a href="#" onclick="navigateToEditForm(this)"><i class="bi bi-pencil-square"></i></a>
</script>

<script>
    function navigateToEditForm(e) {
        var grid = document.getElementsByClassName('e-grid')[0].ej2_instances[0];
        var rowObj = grid.getRowObjectFromUID(ej.base.closest(e, '.e-row').getAttribute('data-uid'));
        var beneficiaryID = rowObj.data['BeneficiaryID']; // Get the BeneficiaryID from the grid row
        window.location.href = '/Beneficiaries/Edit?id=' + beneficiaryID; // Navigate to AddValidationForm page with beneficiaryID as query parameter
    }
</script>

@*This is for view form*@
<script id="templateview" type="text/x-template">
    <a href="#" onclick="navigateToViewForm(this)">View</a>
</script>

<script>
    function navigateToViewForm(e) {
        var grid = document.getElementsByClassName('e-grid')[0].ej2_instances[0];
        var rowObj = grid.getRowObjectFromUID(ej.base.closest(e, '.e-row').getAttribute('data-uid'));
        var beneficiaryID = rowObj.data['BeneficiaryID']; // Get the BeneficiaryID from the grid row
        window.location.href = '/Beneficiaries/Details?id=' + beneficiaryID; // Navigate to AddValidationForm page with beneficiaryID as query parameter
    }
</script>

@*This is for delete form*@
<script id="templatedelete" type="text/x-template">
    <a href="#" onclick="navigateToDeleteForm(this)"><i class="bi bi-trash"></i></a>
</script>

<script>
    function navigateToDeleteForm(e) {
        var grid = document.getElementsByClassName('e-grid')[0].ej2_instances[0];
        var rowObj = grid.getRowObjectFromUID(ej.base.closest(e, '.e-row').getAttribute('data-uid'));
        var beneficiaryID = rowObj.data['BeneficiaryID']; // Get the BeneficiaryID from the grid row
        window.location.href = '/Beneficiaries/Delete?id=' + beneficiaryID; // Navigate to AddValidationForm page with beneficiaryID as query parameter
    }
</script>



@*
@{
//An mga button ma disable kung waya nay previous or next page.
var prevDisabled = !Model.Beneficiaries.HasPreviousPage ? "disabled" : "";
var nextDisabled = !Model.Beneficiaries.HasNextPage ? "disabled" : "";
}
<a asp-page="./Index" asp-route-sortOrder="@Model.CurrentSort"
asp-route-pageIndex="@(Model.Beneficiaries.PageIndex - 1)" asp-route-currentFilter="@Model.CurrentFilter"
class="btn btn-primary @prevDisabled">
&laquo;
</a>
<a asp-page="./Index" asp-route-sortOrder="@Model.CurrentSort"
asp-route-pageIndex="@(Model.Beneficiaries.PageIndex + 1)" asp-route-currentFilter="@Model.CurrentFilter"
class="btn btn-primary @nextDisabled">
&raquo;
</a> *@

@* @{
//An mga button ma disable kung waya nay previous or next page.
var prevDisabled = !Model.BeneficiaryViewModel.HasPreviousPage ? "disabled" : "";
var nextDisabled = !Model.BeneficiaryViewModel.HasNextPage ? "disabled" : "";
}
<a asp-page="./Index" asp-route-sortOrder="@Model.CurrentSort"
asp-route-pageIndex="@(Model.BeneficiaryViewModel.PageIndex - 1)" asp-route-currentFilter="@Model.CurrentFilter"
class="btn btn-primary @prevDisabled">
&laquo;
</a>
<a asp-page="./Index" asp-route-sortOrder="@Model.CurrentSort"
asp-route-pageIndex="@(Model.BeneficiaryViewModel.PageIndex + 1)" asp-route-currentFilter="@Model.CurrentFilter"
class="btn btn-primary @nextDisabled">
&raquo;
</a> *@