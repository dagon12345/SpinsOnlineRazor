@page
@model SpinsOnlineRazor.Pages.Beneficiaries.IndexModel

@{
    ViewData["Title"] = "Beneficiaries";

}
<style>
    table {
    @*display:block;overflow-x:auto;white-space:nowrap;*@
    }

    #fontsize {
        font-size: 12px;
    }
</style>

<h1>Beneficiaries</h1>



@*The preceding code uses the <form> tag helper to add the search text box and button.
By default, the <form> tag helper submits form data with a POST.
With POST, the parameters are passed in the HTTP message body and not in the URL.
When HTTP GET is used, the form data is passed in the URL as query strings.
Passing the data with query strings enables users to bookmark the URL.
The W3C guidelines recommend that GET should be used when the action doesn't result in an update.*@



<div class="Row" style="display: flex; justify-content: space-between;">

    <div class="col-sm-6 ">
        <p>
            <a class="btn btn-success" asp-page="Create" style="padding: 5px; margin-left: 2%;">
                Add <i class="bi bi-plus-circle-fill"></i>
            </a>
            @* <button class="btn btn-primary" data-kt-menu-placement="bottom-end"
            onclick="ExportToExcel('xlsx')"style="padding: 5px; "><i class="bi bi-file-earmark-excel-fill"></i>Export
            </button> *@
        </p>
    </div>


    <div class="col-sm-6 ">
        <form class="d-flex" asp-page="./Index" method="get">
            <input class="form-control me-sm-2" type="search" placeholder="Search Name" name="SearchString"
                value="@Model.CurrentFilter">

            <button class="btn btn-secondary my-2 my-sm-0" type="submit" value="Search"><i
                    class="bi bi-search"></i></button>
                    
            <a class="btn btn-primary" style="margin-right: 5" asp-page="./Index"><i
                    class="bi bi-arrow-clockwise"></i></a>
        </form>
    </div>


</div>



@* <div class="container" style="overflow-x:auto; ">
<table class="table table-hover">

<thead>
<tr>
<th style="text-align: center;">
<div class="btn-group" role="group" aria-label="Actions">
<div class="header-container" style="width: 50px;">
Actions
</div>
</div>
</th>
<th >

<a asp-page="./Index" asp-route-sortOrder="@Model.NameSort"
asp-route-currentFilter="@Model.CurrentFilter">
@Html.DisplayNameFor(model => model.Beneficiaries[0].LastName)
</a>
</th>
<th>
@Html.DisplayNameFor(model => model.Beneficiaries[0].FirstName)
</th>
<th>
@Html.DisplayNameFor(model => model.Beneficiaries[0].MiddleName)
</th>
<th>
@Html.DisplayNameFor(model => model.Beneficiaries[0].ExtName)
</th>
<th>
@Html.DisplayNameFor(model => model.Beneficiaries[0].BirthDate)
</th>


</th>

<th>


</tr>
</thead>
<tbody>
<tr >
@foreach (var item in Model.Beneficiaries)
{
<tr id="fontsize" class="table-primary">
<td style="text-align:center; ">
<div class="btn-group" role="group" aria-label="Actions">

<a class="btn btn-secondary" asp-page="./Edit" asp-route-id="@item.BeneficiaryID">
<i class="bi bi-pencil-square" style="font-size: 8px;"></i>
</a>

<a class="btn btn-info" asp-page="./Details" asp-route-id="@item.BeneficiaryID">
<i class="bi bi-eye"></i>
</a>

<a class="btn btn-danger" asp-page="./Delete" asp-route-id="@item.BeneficiaryID">
<i class="bi bi-trash3-fill" style="font-size: 8px;"> </i>
</a>


</div>
</td>


<td >
@Html.DisplayFor(modelItem => item.LastName)
</td>
<td >
@Html.DisplayFor(modelItem => item.FirstName)
</td>
<td>
@Html.DisplayFor(modelItem => item.MiddleName)
</td>
<td>
@Html.DisplayFor(modelItem => item.ExtName)
</td>
<td>
@Html.DisplayFor(modelItem => item.BirthDate)
</td>


<td>
<div class="btn-group" role="group" aria-label="Actions">
<a class="btn btn-success" asp-page="./AddValidationForm" asp-route-id="@item.BeneficiaryID">
<i class="bi bi-folder-plus"></i>
</a>
</div>
</td>


</tr>
}
</tr>

</tbody>
</table>
</div> *@

<ejs-grid id="Grid" dataSource="@Model.BeneficiaryViewModel">

    <e-grid-columns>
        <e-grid-column headerText="" template="#template" width="40"></e-grid-column>
        <e-grid-column field="BeneficiaryID" headerText="ID" visible="false" width="50"></e-grid-column>
        <e-grid-column field="LastName" headerText="Last Name" width="120"></e-grid-column>
        <e-grid-column field="FirstName" headerText="First Name" width="150"></e-grid-column>
        <e-grid-column field="MiddleName" headerText="MiddleName" width="130"></e-grid-column>
        <e-grid-column field="ExtName" headerText="Extension Name" width="120"></e-grid-column>
        <e-grid-column field="BirthDate" headerText="Birth Date" format="yMd" width="140"></e-grid-column>
        <e-grid-column field="Status" headerText="Status" width="140"></e-grid-column>
        <e-grid-column field="Referencecode" headerText="Validation Number" width="140"></e-grid-column>
        <e-grid-column field="SpinsBatch" headerText="Spins Batch" width="140"></e-grid-column>
        <e-grid-column headerText="" template="#templateedit" width="60" textAlign="Right"></e-grid-column>
        <e-grid-column headerText="" template="#templateview" width="60" textAlign="Center"></e-grid-column>
        <e-grid-column headerText="" template="#templatedelete" width="60" textAlign="Left"></e-grid-column>

    </e-grid-columns>
</ejs-grid>

@*This is for validation form*@
<script id="template" type="text/x-template">
    <a href="#" onclick="navigateToValidationForm(this) " ><i class="bi bi-folder-plus"></i></a>
</script>

<script>
    function navigateToValidationForm(e) {
        var grid = document.getElementsByClassName('e-grid')[0].ej2_instances[0];
        var rowObj = grid.getRowObjectFromUID(ej.base.closest(e, '.e-row').getAttribute('data-uid'));
        var beneficiaryID = rowObj.data['BeneficiaryID']; // Get the BeneficiaryID from the grid row
        window.location.href = '/Beneficiaries/AddValidationForm?id=' + beneficiaryID; // Navigate to AddValidationForm page with beneficiaryID as query parameter
    }
</script>

@*This is for edit form*@
<script id="templateedit" type="text/x-template">
    <a href="#" onclick="navigateToEditForm(this)">Edit</a>
</script>

<script>
    function navigateToEditForm(e) {
        var grid = document.getElementsByClassName('e-grid')[0].ej2_instances[0];
        var rowObj = grid.getRowObjectFromUID(ej.base.closest(e, '.e-row').getAttribute('data-uid'));
        var beneficiaryID = rowObj.data['BeneficiaryID']; // Get the BeneficiaryID from the grid row
        window.location.href = '/Beneficiaries/Edit?id=' + beneficiaryID; // Navigate to AddValidationForm page with beneficiaryID as query parameter
    }
</script>

@*This is for view form*@
<script id="templateview" type="text/x-template">
    <a href="#" onclick="navigateToViewForm(this)">View</a>
</script>

<script>
    function navigateToViewForm(e) {
        var grid = document.getElementsByClassName('e-grid')[0].ej2_instances[0];
        var rowObj = grid.getRowObjectFromUID(ej.base.closest(e, '.e-row').getAttribute('data-uid'));
        var beneficiaryID = rowObj.data['BeneficiaryID']; // Get the BeneficiaryID from the grid row
        window.location.href = '/Beneficiaries/Details?id=' + beneficiaryID; // Navigate to AddValidationForm page with beneficiaryID as query parameter
    }
</script>

@*This is for delete form*@
<script id="templatedelete" type="text/x-template">
    <a href="#" onclick="navigateToDeleteForm(this)">Delete</a>
</script>

<script>
    function navigateToDeleteForm(e) {
        var grid = document.getElementsByClassName('e-grid')[0].ej2_instances[0];
        var rowObj = grid.getRowObjectFromUID(ej.base.closest(e, '.e-row').getAttribute('data-uid'));
        var beneficiaryID = rowObj.data['BeneficiaryID']; // Get the BeneficiaryID from the grid row
        window.location.href = '/Beneficiaries/Delete?id=' + beneficiaryID; // Navigate to AddValidationForm page with beneficiaryID as query parameter
    }
</script>




 @{
    //An mga button ma disable kung waya nay previous or next page.
    var prevDisabled = !Model.BeneficiaryViewModel.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.BeneficiaryViewModel.HasNextPage ? "disabled" : "";
}
<a asp-page="./Index" asp-route-sortOrder="@Model.CurrentSort"
    asp-route-pageIndex="@(Model.BeneficiaryViewModel.PageIndex - 1)" asp-route-currentFilter="@Model.CurrentFilter"
    class="btn btn-primary @prevDisabled">
    &laquo;
</a>
<a asp-page="./Index" asp-route-sortOrder="@Model.CurrentSort"
    asp-route-pageIndex="@(Model.BeneficiaryViewModel.PageIndex + 1)" asp-route-currentFilter="@Model.CurrentFilter"
    class="btn btn-primary @nextDisabled">
    &raquo;
</a> 
