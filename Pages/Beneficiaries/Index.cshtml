@page
@model SpinsOnlineRazor.Pages.Beneficiaries.IndexModel

@{
    ViewData["Title"] = "Beneficiaries";

}

<h1>Beneficiaries</h1>



@*The preceding code uses the <form> tag helper to add the search text box and button.
By default, the <form> tag helper submits form data with a POST.
With POST, the parameters are passed in the HTTP message body and not in the URL.
When HTTP GET is used, the form data is passed in the URL as query strings.
Passing the data with query strings enables users to bookmark the URL.
The W3C guidelines recommend that GET should be used when the action doesn't result in an update.*@



<div class="Row" style="display: flex; justify-content: space-between;">

    <div class="col-sm-6 ">
        <p>
            <a class="btn btn-secondary" asp-page="Create" style="padding: 5px; margin-left: 2%;">Create New</a>
            @* <button class="btn btn-primary" data-kt-menu-placement="bottom-end"
            onclick="ExportToExcel('xlsx')"style="padding: 5px; "><i class="bi bi-file-earmark-excel-fill"></i>Export
            </button> *@
        </p>
    </div>


    <div class="col-sm-6 ">
        <form class="d-flex" asp-page="./Index" method="get">
            <input class="form-control me-sm-2" type="search" placeholder="Search Name" name="SearchString"
                value="@Model.CurrentFilter">
            <button class="btn btn-secondary my-2 my-sm-0" type="submit" value="Search">Search</button>
            <a class="btn btn-primary" style="margin-right: 5" asp-page="./Index">Refresh</a>
        </form>
    </div>


</div>




<div class="container">
    <table class="table table-bordered table-striped table-responsive-stack table-dark" id="tbl_exporttable_to_xls"
        border="1">

        <thead class="thead-dark">
            <tr>


                <th>
                    <a asp-page="./Index" asp-route-sortOrder="@Model.NameSort"
                        asp-route-currentFilter="@Model.CurrentFilter">
                        @Html.DisplayNameFor(model => model.Beneficiaries[0].LastName)
                    </a>
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Beneficiaries[0].FirstName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Beneficiaries[0].MiddleName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Beneficiaries[0].ExtName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Beneficiaries[0].BirthDate)
                </th>
                @* <th bgcolor="white">
                Status
                </th>
                <th>
                Region
                </th>
                <th>
                Province
                </th>
                <th>
                Municipality
                </th>
                <th>
                Barangay
                </th>*@

                <th style="text-align: center;">
                    <div class="btn-group" role="group" aria-label="Actions">
                        <div class="header-container" style="width: 50px;">
                            Actions
                        </div>
                    </div>
                </th>
            </tr>
        </thead>
        <tbody>
            <tr>
                @foreach (var item in Model.Beneficiaries)
                {
                <tr>

                    <td>
                            @Html.DisplayFor(modelItem => item.LastName)
                    </td>
                    <td>
                            @Html.DisplayFor(modelItem => item.FirstName)
                    </td>
                    <td>
                            @Html.DisplayFor(modelItem => item.MiddleName)
                    </td>
                    <td>
                            @Html.DisplayFor(modelItem => item.ExtName)
                    </td>
                    <td>
                            @Html.DisplayFor(modelItem => item.BirthDate)
                    </td>
   
                        @* <td>
                @{
                foreach (var masterlist in item.Masterlists)
                {

                @Html.DisplayFor(modelItem => masterlist.Status.Name)
                }
                }
                </td>
                <td>
                @{
                foreach (var masterlist in item.Masterlists)
                {

                @Html.DisplayFor(modelItem => masterlist.Region.Name)

                }
                }
                </td>
                <td>
                @{
                foreach (var masterlist in item.Masterlists)
                {

                @Html.DisplayFor(modelItem => masterlist.Province.Name)
                }
                }
                </td>
                <td>
                @{
                foreach (var masterlist in item.Masterlists)
                {

                @Html.DisplayFor(modelItem => masterlist.Municipality.Name)
                }
                }
                </td>
                <td>
                @{
                foreach (var masterlist in item.Masterlists)
                {

                @Html.DisplayFor(modelItem => masterlist.Barangay.Name)
                }
                }
                </td>
                *@

                    <td style="text-align:center; ">
                        <div class="btn-group" role="group" aria-label="Actions">

                            <a class="btn btn-secondary" asp-page="./Edit" asp-route-id="@item.BeneficiaryID">
                                <i class="bi bi-pencil-square" style="font-size: 8px;"></i>
                            </a>


                            <a class="btn btn-info" asp-page="./Details" asp-route-id="@item.BeneficiaryID">
                                <i class="bi bi-eye"></i>
                            </a>

                            <a class="btn btn-danger" asp-page="./Delete" asp-route-id="@item.BeneficiaryID">
                                <i class="bi bi-trash3-fill" style="font-size: 8px;"> </i>
                            </a>
                        </div>
                    </td>



                </tr>
                }
            </tr>

        </tbody>
    </table>


    @* <ejs-grid id="Grid" dataSource="@Model.Beneficiaries" toolbar="@(new List<string>() { "Add", "Edit",
    "Delete", "Update", "Cancel" })" action-begin="actionBegin" cssClass="e-css">
    <e-grid-editSettings allowAdding="true" allowDeleting="true" allowEditing="true"
    allowEditOnDblClick="false"></e-grid-editSettings>
    <e-grid-columns>
    <e-grid-column field="LastName" headerText="Last Name" width="120"></e-grid-column>
    <e-grid-column field="FirstName" headerText="First Name" width="150"></e-grid-column>
    <e-grid-column field="MiddleName" headerText="Middle Name" width="130"></e-grid-column>
    <e-grid-column field="ExtName" headerText="Ext Name" width="120"></e-grid-column>
    <e-grid-column field="BirthDate" headerText="Birth Date" width="80" format="yMd"></e-grid-column>
    </e-grid-columns>
    </ejs-grid> *@


    @*Paging code for razor below*@

    @{
        //An mga button ma disable kung waya nay previous or next page.
        var prevDisabled = !Model.Beneficiaries.HasPreviousPage ? "disabled" : "";
        var nextDisabled = !Model.Beneficiaries.HasNextPage ? "disabled" : "";
    }
    @*The paging buttons are displayed by tag helpers:*@
    <a asp-page="./Index" asp-route-sortOrder="@Model.CurrentSort"
        asp-route-pageIndex="@(Model.Beneficiaries.PageIndex - 1)" asp-route-currentFilter="@Model.CurrentFilter"
        class="btn btn-primary @prevDisabled">
        &laquo;
    </a>
    <a asp-page="./Index" asp-route-sortOrder="@Model.CurrentSort"
        asp-route-pageIndex="@(Model.Beneficiaries.PageIndex + 1)" asp-route-currentFilter="@Model.CurrentFilter"
        class="btn btn-primary @nextDisabled">
        &raquo;
    </a>
</div>