import { AnnotationBase } from "../Annotations/AnnotationTypes";
import { ProgressDialogSink } from "../Dialogs/Types";
import { SaveSettings, StampCategory } from "../Models/ViewerTypes";
import { LocalDocumentModification } from "./LocalDocumentModification";
import { OpenDocumentInfo } from "./types";
export interface ISupportApiBase {
    clientId: string;
    docInfo: OpenDocumentInfo;
    documentId: string;
    isDocumentShared: boolean;
    isConnected: boolean;
    applyOptions(options: any): void;
    setViewer(viewer: any): any;
    canEditAnnotation(annotation?: AnnotationBase | null): boolean;
    checkDocumentLoader(): Promise<boolean>;
    closeDocumentLoader(): Promise<boolean>;
    close(): Promise<string>;
    connect(lazy?: boolean): Promise<boolean>;
    dispose(): any;
    getDownloadUrl(filename: string, format: "PDF" | "PNG" | undefined, correlationId: string): string;
    getDownloadUnmodifiedUrl(filename: string): string;
    uploadFiles(fileIds: string[], sink?: ProgressDialogSink): Promise<boolean>;
    getLastError(): Promise<string>;
    getStampCategories(): Promise<StampCategory[]>;
    modify(documentModification: LocalDocumentModification, correlationId: string): Promise<string>;
    openBinary(data: Uint8Array): Promise<void>;
    serverVersion(): Promise<string>;
    setOptions(saveSettings: SaveSettings | undefined, correlationId: string): Promise<string>;
    verifySignature(fieldName: string): Promise<boolean>;
}
